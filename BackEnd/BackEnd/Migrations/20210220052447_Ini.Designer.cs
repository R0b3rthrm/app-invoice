// <auto-generated />
using System;
using BackEnd.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEnd.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210220052447_Ini")]
    partial class Ini
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("BackEnd.Domain.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateReg")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCli")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameCli")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Total")
                        .HasColumnType("money");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("BackEnd.Domain.Models.Invoice_Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("NamePro")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("PricePro")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Invoice_Detail");
                });

            modelBuilder.Entity("BackEnd.Domain.Models.Usersys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EmailUser")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NameUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PassUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Usersys");
                });

            modelBuilder.Entity("BackEnd.Domain.Models.Invoice", b =>
                {
                    b.HasOne("BackEnd.Domain.Models.Usersys", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BackEnd.Domain.Models.Invoice_Detail", b =>
                {
                    b.HasOne("BackEnd.Domain.Models.Invoice", "Invoice")
                        .WithMany("Invoice_Details")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("BackEnd.Domain.Models.Invoice", b =>
                {
                    b.Navigation("Invoice_Details");
                });
#pragma warning restore 612, 618
        }
    }
}
